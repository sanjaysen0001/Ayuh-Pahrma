{"version":3,"sources":["Pharmapages/Subcategory.js"],"names":["i","Subcategory","state","categoryId","rowData","data","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","category","setColumnVisible","subCategoryName","render","history","size","color","onClick","push","_id","runthisfunction","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","console","log","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","axiosConfig","delete","response","message","window","location","reload","catch","error","get","SubCategory","this","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":";8bACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAwB+B,IAEzBC,EAAW,iKAsOb,OAtOa,oCACfC,MAAQ,CACNC,WAAY,GACZC,QAAS,GACTC,KAAM,GACNC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CACV,CACEC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAO,IACPC,QAAQ,GAmBV,CACEJ,WAAY,gBACZE,MAAO,eACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,4CACb,8BAAOD,EAAOhB,KAAKkB,aAM3B,CACER,WAAY,oBACZE,MAAO,kBACPE,QAAQ,EACRD,MAAO,IACPM,kBAAkB,EAClBJ,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,4CACb,8BAAOD,EAAOhB,KAAKoB,oBAiE3B,CACEV,WAAY,SACZE,MAAO,YACPC,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,0BACT,kBAAC,QAAK,CACRI,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAG,CACFL,UAAU,QACVM,KAAK,OACLC,MAAM,QACNC,QAAS,kBACPH,EAAQI,KAAK,oBAAD,OACUV,EAAOhB,KAAK2B,YAO1C,kBAAC,QAAK,CACJN,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAI,CACHL,UAAU,QACVM,KAAK,OACLC,MAAM,OACNC,QAAS,kBACPH,EAAQI,KAAK,sBAAD,OAAuBV,EAAOhB,KAAK2B,YAKvD,kBAAC,IAAM,CACLV,UAAU,QACVM,KAAK,OACLC,MAAM,MACNC,QAAS,WACP,EAAKG,gBAAgBZ,EAAOhB,KAAK2B,aAQ/C,EAoCFE,YAAc,SAACb,GACb,EAAKc,QAAUd,EAAOe,IACtB,EAAKC,cAAgBhB,EAAOiB,UAC5B,EAAKC,SAAS,CACZhC,eAAgB,EAAK4B,QAAQK,2BAA6B,EAC1DhC,YAAa,EAAK2B,QAAQM,wBAC1BC,WAAY,EAAKP,QAAQQ,6BAE3B,EACFC,kBAAoB,SAACC,GACnB,EAAKV,QAAQW,eAAeD,IAC5B,EACFE,WAAa,SAACF,GACR,EAAKV,UACP,EAAKA,QAAQa,sBAAsBC,OAAOJ,IAC1C,EAAKN,SAAS,CACZhC,eAAgBsC,EAChBrC,YAAaqC,MAGlB,EAgIA,OAhIA,4CAvDD,SAAgBb,GACdkB,QAAQC,IAAInB,GACZoB,IAAKC,KAAK,CACRC,MAAO,qCACPC,KAAM,wCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,SACnBC,iBAAkB,WACjBC,MAAK,SAACC,GACPb,QAAQC,IAAIY,GAEPC,IACAC,OAAO,wCAAD,OAAyCjC,IAC/C8B,MAAK,SAACI,GACLhB,QAAQC,IAAIe,EAAS7D,KAAK8D,SAC1BC,OAAOC,SAASC,YAEjBC,OAAM,SAACC,GACNtB,QAAQC,IAAIqB,WAIrB,sEAED,yGACQR,IAAYS,IAAI,sCAAsCX,MAAK,SAACI,GAAc,IAAD,EACzE9D,EAAkB,OAAR8D,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAU7D,YAAI,WAAN,EAAR,EAAgBqE,YAC9BxB,QAAQC,IAAI/C,GACZ,EAAKmC,SAAS,CAAEnC,eACf,KAAD,sCACH,kDARA,IAQA,oBAuBD,WAAU,IAAD,OACP,EAA+CuE,KAAKzE,MAA5CE,EAAO,EAAPA,QAASU,EAAU,EAAVA,WAAYL,EAAa,EAAbA,cAC7B,OACEyC,QAAQC,IAAI/C,GAEV,6BACE,4CAEA,kBAAC,IAAG,CAACkB,UAAU,iBACb,kBAAC,IAAG,CAACsD,GAAG,OACR,kBAAC,IAAG,CAACA,GAAG,MACN,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACtD,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIsD,GAAG,IAAItD,UAAU,gBAEvB,kBAAC,IAAG,KACF,kBAAC,QAAK,CACJI,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLL,UAAU,+BACVQ,QAAS,kBAAMH,EAAQI,KAAK,uBAAqB,YAQ3D,kBAAC,IAAQ,KACiB,OAAvB4C,KAAKzE,MAAME,QAAmB,KAC7B,yBAAKkB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAoB,CAACA,UAAU,mBAC9B,kBAAC,IAAc,CAACuD,IAAI,OACjBF,KAAKxC,QACFwC,KAAKzE,MAAMK,eACX,GAAKoE,KAAKzE,MAAMM,aACfmE,KAAKzE,MAAMM,YAAc,GAAI,IAAG,IACnC,IACDmE,KAAKzE,MAAME,QAAQ0E,OAClBH,KAAKzE,MAAMK,eACToE,KAAKzE,MAAMM,YACf,EACImE,KAAKzE,MAAMK,eACXoE,KAAKzE,MAAMM,YACXmE,KAAKzE,MAAME,QAAQ0E,OAAQ,IAAG,MAC9BH,KAAKzE,MAAME,QAAQ0E,OACvB,kBAAC,IAAW,CAACxD,UAAU,QAAQM,KAAM,MAEvC,kBAAC,IAAY,CAACmD,OAAK,GACjB,kBAAC,IAAY,CACXF,IAAI,MACJ/C,QAAS,kBAAM,EAAKiB,WAAW,MAAI,MAIrC,kBAAC,IAAY,CACX8B,IAAI,MACJ/C,QAAS,kBAAM,EAAKiB,WAAW,MAAI,MAIrC,kBAAC,IAAY,CACX8B,IAAI,MACJ/C,QAAS,kBAAM,EAAKiB,WAAW,OAAK,OAItC,kBAAC,IAAY,CACX8B,IAAI,MACJ/C,QAAS,kBAAM,EAAKiB,WAAW,OAAK,UAO5C,yBAAKzB,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAK,CACJ0D,YAAY,YACZC,SAAU,SAACC,GAAC,OACV,EAAKtC,kBAAkBsC,EAAEC,OAAOC,QAElCA,MAAOT,KAAKzE,MAAMkF,SAGtB,yBAAK9D,UAAU,cACb,kBAAC,IAAO+D,OAAM,CACZxD,MAAM,UACNC,QAAS,kBAAM,EAAKK,QAAQmD,oBAAkB,oBAOtD,kBAAC,IAAcC,SAAQ,MACpB,SAACC,GAAO,OACP,kBAAC,cAAW,CACVC,YAAa,GACbC,aAAa,WACbjF,cAAeA,EACfK,WAAYA,EACZV,QAASA,EACT8B,YAAa,EAAKA,YAClByD,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZxF,mBAAoB,EAAKJ,MAAMI,mBAC/ByF,eAAe,SACfC,UAAuC,QAA5BR,EAAQtF,MAAM+F,yBAalD,EAtWc,CAASC,IAAMC,WAwWjBlG,a","file":"static/js/159.58cfc62a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  CustomInput,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../axiosConfig\";\r\n\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { ContextLayout } from \"../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass Subcategory extends React.Component {\r\n  state = {\r\n    categoryId: \"\",\r\n    rowData: [],\r\n    data: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 120,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Product Name\",\r\n      //   field: \"productname\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.productname}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Category Name\",\r\n        field: \"categoryname\",\r\n        filter: true,\r\n        width: 370,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.category}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Sub-Category Name\",\r\n        field: \"subcategoryname\",\r\n        filter: false,\r\n        width: 370,\r\n        setColumnVisible: false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.subCategoryName}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Selling Price\",\r\n      //   field: \"price\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.price}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Description\",\r\n      //   field: \"desc\",\r\n      //   filter: true,\r\n      //   width: 200,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{ReactHtmlParser(params.data.desc)}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \"Limit\",\r\n      //   field: \"limit\",\r\n      //   filter: true,\r\n      //   width: 180,\r\n      //   cellRendererFramework: (params) => {\r\n      //     console.log(params);\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data?.limit}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Active\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Deactive\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        headerName: \"Action\",\r\n        field: \"sortorder\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n                  <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/Viewsubcategory/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n             \r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(`/Edit-sub-category/${params.data._id}`)\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  this.runthisfunction(params.data._id);\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  runthisfunction(_id) {\r\n    console.log(_id);\r\n    Swal.fire({\r\n      title: \"Do You Want To Delete Permanently?\",\r\n      text: \"This item will be deleted immediately\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Delete\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      console.log(result);\r\n     \r\n           axiosConfig\r\n          .delete(`/pharma-category/delete-sub-category/${_id}`)\r\n          .then((response) => {\r\n            console.log(response.data.message);\r\n            window.location.reload();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n     \r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(`/pharma-category/view-sub-category`).then((response) => {\r\n      let rowData = response?.data?.SubCategory;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      ( \r\n        <div>\r\n          <h2>Sub-Category</h2>\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col>\r\n                    <h1 sm=\"6\" className=\"float-left\"></h1>\r\n                  </Col>\r\n                  <Col>\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-success float-right\"\r\n                          onClick={() => history.push(\"/Add-sub-category\")}\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default Subcategory;\r\n"],"sourceRoot":""}