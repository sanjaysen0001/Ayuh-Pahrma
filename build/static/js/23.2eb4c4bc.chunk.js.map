{"version":3,"sources":["redux/actions/data-list/index.js","views/ui-elements/data-list/DataListSidebar.js","views/ui-elements/data-list/DataListConfig.js","components/@vuexy/checkbox/CheckboxesVuexy.js","components/@vuexy/chips/ChipComponent.js"],"names":["getData","params","dispatch","axios","get","then","response","type","data","totalPages","DataListSidebar","state","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","obj","props","updateData","addData","Object","keys","dataParams","length","page","perPage","handleSidebar","prevProps","prevState","this","setState","show","className","classnames","size","onClick","options","wheelPropagation","thumbView","FormGroup","src","alt","htmlFor","color","hidden","onChange","e","URL","createObjectURL","target","files","Button","Label","for","Input","value","placeholder","outline","Component","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","currentData","row","deleteRow","CustomHeader","UncontrolledDropdown","DropdownToggle","DropdownMenu","tag","right","DropdownItem","index","total","handleRowsPerPage","handleFilter","DataListConfig","currentPage","columns","selector","sortable","minWidth","cell","title","Progress","text","parsedFilter","handleCurrentData","handleDelete","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","filterData","undefined","history","push","boolean","deleteData","urlPrefix","parseInt","handlePagination","getInitialData","height","pagination","paginationServer","paginationComponent","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","containerClassName","activeClassName","forcePage","onPageChange","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","label","dataList","filteredData","connect","post","getState","CheckBoxesVuexy","defaultChecked","checked","disabled","React","Chip","closeChip","closest","remove","avatarImg","avatarText","avatarIcon","avatarColor","width","closable","closableIcon"],"mappings":";ucACA,06MACO,IAAMA,EAAU,SAAAC,GACrB,8CAAO,WAAMC,GAAQ,iFACbC,IAAMC,IAAI,qBAAsBH,GAAQI,MAAK,SAAAC,GACjDJ,EAAS,CACPK,KAAM,WACNC,KAAMF,EAASE,KAAKA,KACpBC,WAAYH,EAASE,KAAKC,WAC1BR,cAEF,2CACH,mDATD,I,mDCkOaS,EA/NM,iKAqFlB,OArFkB,oCACnBC,MAAQ,CACNC,GAAI,GACJC,KAAM,GACNC,SAAU,QACVC,aAAc,UACdC,MAAO,GACPC,IAAK,GACLC,WAAY,CACVC,SAAU,KAEb,EAEDC,QAAS,EAAK,EA4DdC,aAAe,SAAAC,GACW,OAApB,EAAKC,MAAMf,KACb,EAAKe,MAAMC,WAAWF,IAEtB,EAAKF,QAAS,EACd,EAAKG,MAAME,QAAQH,IAErB,IAAIrB,EAASyB,OAAOC,KAAK,EAAKJ,MAAMK,YAAYC,OAC5C,EAAKN,MAAMK,WACX,CAAEE,KAAM,EAAGC,QAAS,GACxB,EAAKR,MAAMS,eAAc,GAAO,GAChC,EAAKT,MAAMvB,QAAQC,IACpB,EAwIA,OAxIA,+CAtED,SAAmBgC,EAAWC,GACJ,OAApBC,KAAKZ,MAAMf,MAAoC,OAAnByB,EAAUzB,OACpC2B,KAAKZ,MAAMf,KAAKI,KAAOsB,EAAUtB,IACnCuB,KAAKC,SAAS,CAAExB,GAAIuB,KAAKZ,MAAMf,KAAKI,KAElCuB,KAAKZ,MAAMf,KAAKK,OAASqB,EAAUrB,MACrCsB,KAAKC,SAAS,CAAEvB,KAAMsB,KAAKZ,MAAMf,KAAKK,OAEpCsB,KAAKZ,MAAMf,KAAKM,WAAaoB,EAAUpB,UACzCqB,KAAKC,SAAS,CAAEtB,SAAUqB,KAAKZ,MAAMf,KAAKM,WAExCqB,KAAKZ,MAAMf,KAAKU,WAAWC,WAAae,EAAUhB,YACpDiB,KAAKC,SAAS,CACZlB,WAAW,2BACNiB,KAAKxB,MAAMO,YAAU,IACxBC,SAAUgB,KAAKZ,MAAMf,KAAKU,WAAWC,aAIvCgB,KAAKZ,MAAMf,KAAKO,eAAiBmB,EAAUnB,cAC7CoB,KAAKC,SAAS,CAAErB,aAAcoB,KAAKZ,MAAMf,KAAKO,eAE5CoB,KAAKZ,MAAMf,KAAKQ,QAAUkB,EAAUlB,OACtCmB,KAAKC,SAAS,CAAEpB,MAAOmB,KAAKZ,MAAMf,KAAKQ,QAErCmB,KAAKZ,MAAMf,KAAKS,MAAQiB,EAAUjB,KACpCkB,KAAKC,SAAS,CAAEnB,IAAKkB,KAAKZ,MAAMf,KAAKS,OAGjB,OAApBkB,KAAKZ,MAAMf,MAAoC,OAAnByB,EAAUzB,MACxC2B,KAAKC,SAAS,CACZxB,GAAI,GACJC,KAAM,GACNC,SAAU,QACVC,aAAc,UACdC,MAAO,GACPC,IAAK,GACLC,WAAY,CACVC,SAAU,MAIZgB,KAAKf,QACPe,KAAKC,SAAS,CACZxB,GAAI,GACJC,KAAM,GACNC,SAAU,QACVC,aAAc,UACdC,MAAO,GACPC,IAAK,GACLC,WAAY,CACVC,SAAU,MAIhBgB,KAAKf,QAAS,IACf,oBAgBD,WAAU,IAAD,OACP,EAAoCe,KAAKZ,MAAnCc,EAAI,EAAJA,KAAML,EAAa,EAAbA,cAAexB,EAAI,EAAJA,KAC3B,EAA+D2B,KAAKxB,MAA9DE,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAcC,EAAK,EAALA,MAAOE,EAAU,EAAVA,WAAYD,EAAG,EAAHA,IACvD,OACE,yBACEqB,UAAWC,IAAW,oBAAqB,CACzCF,KAAMA,KAER,yBAAKC,UAAU,qEACb,4BAAc,OAAT9B,EAAgB,cAAgB,gBACrC,kBAAC,IAAC,CAACgC,KAAM,GAAIC,QAAS,kBAAMT,GAAc,GAAO,OAEnD,kBAAC,IAAgB,CACfM,UAAU,6BACVI,QAAS,CAAEC,kBAAkB,IAC5BR,KAAKZ,MAAMqB,WAAa3B,EAAIY,OAC3B,kBAACgB,EAAA,EAAS,CAACP,UAAU,eACnB,yBAAKA,UAAU,YAAYQ,IAAK7B,EAAK8B,IAAKlC,IAC1C,yBAAKyB,UAAU,iDACb,2BACEA,UAAU,uBACVU,QAAQ,eACRC,MAAM,WAAS,eAEf,2BACE1C,KAAK,OACLK,GAAG,eACHsC,QAAM,EACNC,SAAU,SAAAC,GAAC,OACT,EAAKhB,SAAS,CACZnB,IAAKoC,IAAIC,gBAAgBF,EAAEG,OAAOC,MAAM,UAKhD,kBAACC,EAAA,EAAM,CACLR,MAAM,cACNR,QAAS,kBAAM,EAAKL,SAAS,CAAEnB,IAAK,OAAM,kBAK9C,KACJ,kBAAC4B,EAAA,EAAS,KACR,kBAACa,EAAA,EAAK,CAACC,IAAI,aAAW,QACtB,kBAACC,EAAA,EAAK,CACJrD,KAAK,OACLsD,MAAOhD,EACPiD,YAAY,gBACZX,SAAU,SAAAC,GAAC,OAAI,EAAKhB,SAAS,CAAEvB,KAAMuC,EAAEG,OAAOM,SAC9CjD,GAAG,eAGP,kBAACiC,EAAA,EAAS,KACR,kBAACa,EAAA,EAAK,CAACC,IAAI,iBAAe,YAC1B,kBAACC,EAAA,EAAK,CACJrD,KAAK,SACLK,GAAG,gBACHiD,MAAO/C,EACPqC,SAAU,SAAAC,GAAC,OAAI,EAAKhB,SAAS,CAAEtB,SAAUsC,EAAEG,OAAOM,UAClD,yCACA,6CACA,2CACA,gDAGJ,kBAAChB,EAAA,EAAS,KACR,kBAACa,EAAA,EAAK,CAACC,IAAI,mBAAiB,cAC5B,kBAACC,EAAA,EAAK,CACJrD,KAAK,SACLsD,MAAO3C,EAAWC,SAClBP,GAAG,kBACHkD,YAAY,WACZX,SAAU,SAAAC,GAAC,OACT,EAAKhB,SAAS,CACZlB,WAAY,CAAEA,aAAYC,SAAUiC,EAAEG,OAAOM,aAKrD,kBAAChB,EAAA,EAAS,KACR,kBAACa,EAAA,EAAK,CAACC,IAAI,eAAa,gBACxB,kBAACC,EAAA,EAAK,CACJrD,KAAK,SACLK,GAAG,cACHiD,MAAO9C,EACPoC,SAAU,SAAAC,GAAC,OAAI,EAAKhB,SAAS,CAAErB,aAAcqC,EAAEG,OAAOM,UACtD,2CACA,4CACA,6CACA,6CAGJ,kBAAChB,EAAA,EAAS,KACR,kBAACa,EAAA,EAAK,CAACC,IAAI,cAAY,SACvB,kBAACC,EAAA,EAAK,CACJrD,KAAK,SACLsD,MAAO7C,EACPmC,SAAU,SAAAC,GAAC,OAAI,EAAKhB,SAAS,CAAEpB,MAAOoC,EAAEG,OAAOM,SAC/CjD,GAAG,aACHkD,YAAY,WAGf3B,KAAKZ,MAAMqB,WAAa3B,EAAIY,QAAU,EACrC,2BACES,UAAU,kBACVU,QAAQ,eACRC,MAAM,WAAS,eAEf,2BACE1C,KAAK,OACLK,GAAG,eACHsC,QAAM,EACNC,SAAU,SAAAC,GAAC,OACT,EAAKhB,SAAS,CAAEnB,IAAKoC,IAAIC,gBAAgBF,EAAEG,OAAOC,MAAM,UAI5D,MAEN,yBAAKlB,UAAU,sFACb,kBAACmB,EAAA,EAAM,CAACR,MAAM,UAAUR,QAAS,kBAAM,EAAKpB,aAAa,EAAKV,SAClD,OAATH,EAAgB,SAAW,UAE9B,kBAACiD,EAAA,EAAM,CACLnB,UAAU,OACVW,MAAM,SACNc,SAAO,EACPtB,QAAS,kBAAMT,GAAc,GAAO,KAAM,gBAMnD,EA7NkB,CAASgC,a,kBCiCxBC,G,gBAAa,CACjB,UAAW,UACXC,UAAW,UACXC,QAAS,UACTC,SAAU,WAGNC,EAAgB,CACpBC,KAAM,CACJC,sBAAuB,CACrBC,gBAAiB,wBACjBvB,MAAO,qBACPwB,UAAW,+BACX,UAAW,CACTC,UAAW,iCAMbC,EAAmB,SAAApD,GACvB,OACE,yBAAKe,UAAU,oBACb,kBAAC,IAAI,CACHA,UAAU,sBACVE,KAAM,GACNC,QAAS,WACP,OAAOlB,EAAMqD,YAAYrD,EAAMsD,QAGnC,kBAAC,IAAK,CACJvC,UAAU,iBACVE,KAAM,GACNC,QAAS,WACPlB,EAAMuD,UAAUvD,EAAMsD,UAO1BE,EAAe,SAAAxD,GACnB,OACE,yBAAKe,UAAU,6DACb,yBAAKA,UAAU,iCACb,kBAAC0C,EAAA,EAAoB,CAAC1C,UAAU,2BAC9B,kBAAC2C,EAAA,EAAc,CAAC3C,UAAU,MAAMW,MAAM,WACpC,0BAAMX,UAAU,qBAAmB,WACnC,kBAAC,IAAW,CAACE,KAAM,MAErB,kBAAC0C,EAAA,EAAY,CAACC,IAAI,MAAMC,OAAK,GAC3B,kBAACC,EAAA,EAAY,CAACF,IAAI,KAAG,UACrB,kBAACE,EAAA,EAAY,CAACF,IAAI,KAAG,WACrB,kBAACE,EAAA,EAAY,CAACF,IAAI,KAAG,SACrB,kBAACE,EAAA,EAAY,CAACF,IAAI,KAAG,YAGzB,kBAAC1B,EAAA,EAAM,CACLnB,UAAU,cACVW,MAAM,UACNR,QAAS,kBAAMlB,EAAMS,eAAc,GAAM,IACzC+B,SAAO,GACP,kBAAC,IAAI,CAACvB,KAAM,KACZ,0BAAMF,UAAU,gBAAc,aAGlC,yBAAKA,UAAU,+CACb,kBAAC0C,EAAA,EAAoB,CAAC1C,UAAU,kDAC9B,kBAAC2C,EAAA,EAAc,CAAChC,MAAM,GAAGX,UAAU,iBACjC,0BAAMA,UAAU,sBAAoB,UAC9Bf,EAAM+D,MAAM,GAAE,cAAM/D,EAAM+D,MAAM,GAAE,eAAO/D,EAAMgE,QAErD,kBAAC,IAAW,CAAC/C,KAAM,MAErB,kBAAC0C,EAAA,EAAY,CAACC,IAAI,MAAMC,OAAK,GAC3B,kBAACC,EAAA,EAAY,CAACF,IAAI,IAAI1C,QAAS,kBAAMlB,EAAMiE,kBAAkB,KAAG,KAGhE,kBAACH,EAAA,EAAY,CAACF,IAAI,IAAI1C,QAAS,kBAAMlB,EAAMiE,kBAAkB,MAAI,MAGjE,kBAACH,EAAA,EAAY,CAACF,IAAI,IAAI1C,QAAS,kBAAMlB,EAAMiE,kBAAkB,MAAI,MAGjE,kBAACH,EAAA,EAAY,CAACF,IAAI,IAAI1C,QAAS,kBAAMlB,EAAMiE,kBAAkB,MAAI,QAKrE,yBAAKlD,UAAU,kBACb,kBAACsB,EAAA,EAAK,CAACrD,KAAK,OAAO4C,SAAU,SAAAC,GAAC,OAAI7B,EAAMkE,aAAarC,UAOzDsC,EAAc,iKAuOjB,OAvOiB,oCAqBlB/E,MAAQ,CACNH,KAAM,GACNC,WAAY,EACZkF,YAAa,EACbC,QAAS,CACP,CACE/E,KAAM,OACNgF,SAAU,OACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAnB,GAAG,OACP,uBAAGoB,MAAOpB,EAAIhE,KAAMyB,UAAU,oCAC3BuC,EAAIhE,QAIX,CACEA,KAAM,WACNgF,SAAU,WACVC,UAAU,GAEZ,CACEjF,KAAM,aACNgF,SAAU,aACVC,UAAU,EACVE,KAAM,SAAAnB,GAAG,OACP,kBAACqB,EAAA,EAAQ,CACP5D,UAAU,aACVW,MAAO4B,EAAI3D,WAAW+B,MACtBY,MAAOgB,EAAI3D,WAAWC,aAI5B,CACEN,KAAM,eACNgF,SAAU,eACVC,UAAU,EACVE,KAAM,SAAAnB,GAAG,OACP,kBAAC,IAAI,CACHvC,UAAU,MACVW,MAAOgB,EAAWY,EAAI9D,cACtBoF,KAAMtB,EAAI9D,iBAIhB,CACEF,KAAM,QACNgF,SAAU,QACVC,UAAU,EACVE,KAAM,SAAAnB,GAAG,iBAAQA,EAAI7D,SAEvB,CACEH,KAAM,UACNiF,UAAU,EACVE,KAAM,SAAAnB,GAAG,OACP,kBAAC,EAAgB,CACfA,IAAKA,EACL7E,QAAS,EAAKuB,MAAMvB,QACpBoG,aAAc,EAAK7E,MAAM6E,aACzBxB,YAAa,EAAKyB,kBAClBvB,UAAW,EAAKwB,kBAKxBC,QAAS,GACT1C,MAAO,GACP2C,YAAa,EACbC,SAAS,EACT7B,YAAa,KACb8B,SAAU,GACVC,aAAc,EACdC,UAAW,GACXxF,OAAQ,IACT,EAEDwB,UAAY,EAAKrB,MAAMqB,UAAS,EAiFhC6C,aAAe,SAAArC,GACb,EAAKhB,SAAS,CAAEyB,MAAOT,EAAEG,OAAOM,QAChC,EAAKtC,MAAMsF,WAAWzD,EAAEG,OAAOM,QAChC,EAED2B,kBAAoB,SAAA3B,GAClB,MAAgC,EAAKtC,MAA/B6E,EAAY,EAAZA,aAAcpG,EAAO,EAAPA,QAChB8B,OAA6BgF,IAAtBV,EAAatE,KAAqBsE,EAAatE,KAAO,EACjEiF,IAAQC,KAAK,6BAAD,OAA8BlF,EAAI,oBAAY+B,IAC1D,EAAKzB,SAAS,CAAEoE,YAAa3C,IAC7B7D,EAAQ,CAAE8B,KAAMsE,EAAatE,KAAMC,QAAS8B,KAC7C,EAED7B,cAAgB,SAACiF,GAA6B,IAApB7F,EAAM,wDAC9B,EAAKgB,SAAS,CAAEqE,QAASQ,KACV,IAAX7F,GAAiB,EAAKgB,SAAS,CAAEwC,YAAa,KAAMxD,QAAQ,KACjE,EAEDkF,aAAe,SAAAzB,GAGb,GAFA,EAAKtD,MAAM2F,WAAWrC,GACtB,EAAKtD,MAAMvB,QAAQ,EAAKuB,MAAM6E,cAC1B,EAAKzF,MAAMH,KAAKqB,OAAS,IAAM,EAAG,CACpC,IAAIsF,EAAY,EAAK5F,MAAMqB,UACvB,yBACA,wBACJmE,IAAQC,KAAK,GAAD,OACPG,EAAS,0BAAkBC,SAC5B,EAAK7F,MAAM6E,aAAatE,KAAO,GAChC,oBAAY,EAAKP,MAAM6E,aAAarE,UAEvC,EAAKR,MAAMvB,QAAQ,CACjB8B,KAAM,EAAKP,MAAM6E,aAAatE,KAAO,EACrCC,QAAS,EAAKR,MAAM6E,aAAarE,YAGtC,EAEDsE,kBAAoB,SAAA/E,GAClB,EAAKc,SAAS,CAAEwC,YAAatD,IAC7B,EAAKU,eAAc,IACpB,EAEDqF,iBAAmB,SAAAvF,GACjB,MAAgC,EAAKP,MAA/B6E,EAAY,EAAZA,aAAcpG,EAAO,EAAPA,QAChB+B,OAAmC+E,IAAzBV,EAAarE,QAAwBqE,EAAarE,QAAU,EACtEoF,EAAY,EAAK5F,MAAMqB,UACvB,yBACA,wBACJmE,IAAQC,KAAK,GAAD,OACPG,EAAS,0BAAkBrF,EAAK4E,SAAW,EAAC,oBAAY3E,IAE7D/B,EAAQ,CAAE8B,KAAMA,EAAK4E,SAAW,EAAG3E,QAASA,IAC5C,EAAKK,SAAS,CAAEuD,YAAa7D,EAAK4E,YACnC,EApNA,OAoNA,8CApID,WACEvE,KAAKZ,MAAMvB,QAAQmC,KAAKZ,MAAM6E,cAC9BjE,KAAKZ,MAAM+F,mBACZ,gCAED,SAAmBrF,EAAWC,GAAY,IAAD,OACvC,GAAIC,KAAKS,UAAW,CAClBT,KAAKS,WAAY,EACjB,IAAIgD,EAAU,CACZ,CACE/E,KAAM,QACNgF,SAAU,MACVE,SAAU,QACVC,KAAM,SAAAnB,GAAG,OAAI,yBAAK/B,IAAK+B,EAAI5D,IAAKsG,OAAO,MAAMxE,IAAK8B,EAAIhE,SAExD,CACEA,KAAM,OACNgF,SAAU,OACVC,UAAU,EACVC,SAAU,QACVC,KAAM,SAAAnB,GAAG,OACP,uBAAGoB,MAAOpB,EAAIhE,KAAMyB,UAAU,oCAC3BuC,EAAIhE,QAIX,CACEA,KAAM,WACNgF,SAAU,WACVC,UAAU,GAEZ,CACEjF,KAAM,aACNgF,SAAU,aACVC,UAAU,EACVE,KAAM,SAAAnB,GAAG,OACP,kBAACqB,EAAA,EAAQ,CACP5D,UAAU,aACVW,MAAO4B,EAAI3D,WAAW+B,MACtBY,MAAOgB,EAAI3D,WAAWC,aAI5B,CACEN,KAAM,eACNgF,SAAU,eACVC,UAAU,EACVE,KAAM,SAAAnB,GAAG,OACP,kBAAC,IAAI,CACHvC,UAAU,MACVW,MAAOgB,EAAWY,EAAI9D,cACtBoF,KAAMtB,EAAI9D,iBAIhB,CACEF,KAAM,QACNgF,SAAU,QACVC,UAAU,EACVE,KAAM,SAAAnB,GAAG,iBAAQA,EAAI7D,SAEvB,CACEH,KAAM,UACNiF,UAAU,EACVE,KAAM,SAAAnB,GAAG,OACP,kBAAC,EAAgB,CACfA,IAAKA,EACL7E,QAAS,EAAKuB,MAAMvB,QACpBoG,aAAc,EAAK7E,MAAM6E,aACzBxB,YAAa,EAAKyB,kBAClBvB,UAAW,EAAKwB,kBAKxBnE,KAAKC,SAAS,CAAEwD,eAEnB,oBAyDD,WAAU,IAAD,OACP,EAWIzD,KAAKxB,MAVPiF,EAAO,EAAPA,QACApF,EAAI,EAAJA,KACA+F,EAAO,EAAPA,QACA9F,EAAU,EAAVA,WACAoD,EAAK,EAALA,MACA2C,EAAW,EAAXA,YACA5B,EAAW,EAAXA,YACA6B,EAAO,EAAPA,QACAE,EAAY,EAAZA,aACAC,EAAS,EAATA,UAEF,OACE,yBACEtE,UAAS,oBACPH,KAAKZ,MAAMqB,UAAY,aAAe,cAExC,kBAAC,IAAS,CACRgD,QAASA,EACTpF,KAAMqD,EAAMhC,OAAS0E,EAAU/F,EAC/BgH,YAAU,EACVC,kBAAgB,EAChBC,oBAAqB,kBACnB,kBAAC,IAAa,CACZC,cAAe,kBAAC,IAAW,CAACnF,KAAM,KAClCoF,UAAW,kBAAC,IAAY,CAACpF,KAAM,KAC/BqF,WAAW,MACXC,eAAe,WACfC,UAAWtH,EACXuH,mBAAmB,4EACnBC,gBAAgB,SAChBC,UACE,EAAK3G,MAAM6E,aAAatE,KACpBsF,SAAS,EAAK7F,MAAM6E,aAAatE,KAAO,GACxC,EAENqG,aAAc,SAAArG,GAAI,OAAI,EAAKuF,iBAAiBvF,OAGhDsG,UAAQ,EACRC,WAAS,EACTC,gBAAc,EACdC,YAAU,EACVC,gBAAc,EACdC,yBAAuB,EACvBC,qBAAsB,SAAAlI,GAAI,OACxB,EAAK4B,SAAS,CAAEsE,SAAUlG,EAAKmI,gBAEjCC,aAAcvE,EACdwE,mBACE,kBAAC,EAAY,CACX7G,cAAeG,KAAKH,cACpByD,aAActD,KAAKsD,aACnBD,kBAAmBrD,KAAKqD,kBACxBgB,YAAaA,EACbjB,MAAOoB,EACPrB,MAAOsB,IAGXkC,SAAU,kBAAC,IAAW,MACtBC,wBAAyBC,IACzBC,6BAA8B,CAC5BhG,MAAO,UACPiG,KAAM,kBAAC,IAAK,CAAC5G,UAAU,UAAUE,KAAM,KACvC2G,MAAO,GACP3G,KAAM,QAGV,kBAAC,EAAO,CACNH,KAAMoE,EACNjG,KAAMoE,EACNpD,WAAYW,KAAKZ,MAAMC,WACvBC,QAASU,KAAKZ,MAAME,QACpBO,cAAeG,KAAKH,cACpBY,UAAWT,KAAKZ,MAAMqB,UACtB5C,QAASmC,KAAKZ,MAAMvB,QACpB4B,WAAYO,KAAKZ,MAAM6E,aACvBhF,OAAQe,KAAKxB,MAAMS,SAErB,yBACEkB,UAAWC,IAAW,oBAAqB,CACzCF,KAAMoE,IAERhE,QAAS,kBAAM,EAAKT,eAAc,GAAO,UAIhD,uCAhUD,SAAgCT,EAAOZ,GACrC,OACEY,EAAM6H,SAAS5I,KAAKqB,SAAWlB,EAAMH,KAAKqB,QAC1ClB,EAAMgF,cAAgBpE,EAAM6E,aAAatE,KAElC,CACLtB,KAAMe,EAAM6H,SAAS5I,KACrB+F,QAAShF,EAAM6H,SAASC,aACxB5I,WAAYc,EAAM6H,SAAS3I,WAC3BkF,YAAayB,SAAS7F,EAAM6E,aAAatE,MAAQ,EACjD0E,YAAaY,SAAS7F,EAAM6E,aAAarE,SACzC4E,aAAcpF,EAAM6H,SAASzC,aAC7BC,UAAWrF,EAAM6H,SAASxC,WAKvB,SACR,EAnBiB,CAAS5C,aA0UdsF,iBANS,SAAA3I,GACtB,MAAO,CACLyI,SAAUzI,EAAMyI,YAIoB,CACtCpJ,UACAkH,WFzbwB,SAAA5F,GACxB,OAAO,SAAApB,GACLC,IACGoJ,KAAK,4BAA6B,CACjCjI,QAEDjB,MAAK,SAAAC,GACJJ,EAAS,CAAEK,KAAM,cAAee,aEmbtCE,WF9awB,SAAAF,GACxB,OAAO,SAACpB,EAAUsJ,GAChBrJ,IACGoJ,KAAK,4BAA6B,CACjCjI,QAEDjB,MAAK,SAAAC,GACJJ,EAAS,CAAEK,KAAM,cAAee,aEwatCG,QFnaqB,SAAAH,GACrB,OAAO,SAACpB,EAAUsJ,GAChB,IAAIvJ,EAASuJ,IAAWJ,SAASnJ,OACjCE,IACGoJ,KAAK,yBAA0B,CAC9BjI,QAEDjB,MAAK,SAAAC,GACJJ,EAAS,CAAEK,KAAM,WAAYe,QAC7BpB,EAASF,EAAQC,SE2ZvBqH,eFxc4B,WAC5B,8CAAO,WAAMpH,GAAQ,iFACbC,IAAMC,IAAI,8BAA8BC,MAAK,SAAAC,GACjDJ,EAAS,CAAEK,KAAM,eAAgBC,KAAMF,EAASE,UAChD,2CACH,mDAJD,IEwcAqG,WFjcwB,SAAAhD,GACxB,OAAO,SAAA3D,GAAQ,OAAIA,EAAS,CAAEK,KAAM,cAAesD,aE0btCyF,CAOZ5D,I,4GCxdG+D,EAAe,kHA2BlB,OA3BkB,mCACnB,WACE,OACE,yBACEnH,UAAS,0BACPH,KAAKZ,MAAMe,UAAYH,KAAKZ,MAAMe,UAAY,GAAE,wBAClCH,KAAKZ,MAAM0B,QAE3B,2BACE1C,KAAK,WACLmJ,eAAgBvH,KAAKZ,MAAMmI,eAC3BC,QAASxH,KAAKZ,MAAMoI,QACpB9F,MAAO1B,KAAKZ,MAAMsC,MAClB+F,SAAUzH,KAAKZ,MAAMqI,SACrBnH,QAASN,KAAKZ,MAAMkB,QAAUN,KAAKZ,MAAMkB,QAAU,KACnDU,SAAUhB,KAAKZ,MAAM4B,SAAWhB,KAAKZ,MAAM4B,SAAW,OAExD,0BACEb,UAAS,kCACPH,KAAKZ,MAAMiB,KAAOL,KAAKZ,MAAMiB,KAAO,OAGtC,0BAAMF,UAAU,sBAAsBH,KAAKZ,MAAM2H,OAEnD,8BAAO/G,KAAKZ,MAAM4H,YAGvB,EA3BkB,CAASU,IAAM7F,WA8BrByF,O,8FC7BTK,EAAI,iKAGP,OAHO,oCACRC,UAAY,SAAA3G,GACVA,EAAEG,OAAOyG,QAAQ,SAASC,UAC3B,EAyCA,OAzCA,mCAED,WAAU,IAAD,OACP,OACE,yBACE3H,UAAS,eAAUH,KAAKZ,MAAMe,UAAS,YACrCH,KAAKZ,MAAM0B,MAAK,eAAWd,KAAKZ,MAAM0B,OAAU,OAGlD,yBAAKX,UAAU,cACVH,KAAKZ,MAAM2I,WAAa/H,KAAKZ,MAAM4I,aACpChI,KAAKZ,MAAM2I,WAAa/H,KAAKZ,MAAM6I,WACnC,yBACE9H,UAAS,iBACPH,KAAKZ,MAAM8I,YAAW,aAASlI,KAAKZ,MAAM8I,aAAgB,OAG5D,yBAAK/H,UAAU,kBACZH,KAAKZ,MAAM4I,WAAahI,KAAKZ,MAAM4I,WAAa,KAChDhI,KAAKZ,MAAM6I,WAAajI,KAAKZ,MAAM6I,WAAa,OAGnDjI,KAAKZ,MAAM2I,UACb,yBAAK5H,UAAU,UACb,yBACEQ,IAAKX,KAAKZ,MAAM2I,UAChBnH,IAAI,UACJwE,OAAO,KACP+C,MAAM,QAGR,KACJ,yBAAKhI,UAAU,aAAaH,KAAKZ,MAAM4E,MACtChE,KAAKZ,MAAMgJ,SACV,yBAAKjI,UAAU,gBAAgBG,QAAS,SAAAW,GAAC,OAAI,EAAK2G,UAAU3G,KACzDjB,KAAKZ,MAAMiJ,aAAerI,KAAKZ,MAAMiJ,aAAe,kBAAC,IAAC,OAEvD,WAIX,EA5CO,CAASX,IAAM7F,WA+CV8F","file":"static/js/23.2eb4c4bc.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport const getData = params => {\r\n  return async dispatch => {\r\n    await axios.get(\"/api/datalist/data\", params).then(response => {\r\n      dispatch({\r\n        type: \"GET_DATA\",\r\n        data: response.data.data,\r\n        totalPages: response.data.totalPages,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  return async dispatch => {\r\n    await axios.get(\"/api/datalist/initial-data\").then(response => {\r\n      dispatch({ type: \"GET_ALL_DATA\", data: response.data })\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterData = value => {\r\n  return dispatch => dispatch({ type: \"FILTER_DATA\", value })\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/datalist/delete-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"DELETE_DATA\", obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateData = obj => {\r\n  return (dispatch, getState) => {\r\n    axios\r\n      .post(\"/api/datalist/update-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"UPDATE_DATA\", obj })\r\n      })\r\n  }\r\n}\r\n\r\nexport const addData = obj => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().dataList.params\r\n    axios\r\n      .post(\"/api/datalist/add-data\", {\r\n        obj\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"ADD_DATA\", obj })\r\n        dispatch(getData(params))\r\n      })\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\nimport { Label, Input, FormGroup, Button } from \"reactstrap\"\nimport { X } from \"react-feather\"\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport classnames from \"classnames\"\n\nclass DataListSidebar extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    category: \"Audio\",\n    order_status: \"pending\",\n    price: \"\",\n    img: \"\",\n    popularity: {\n      popValue: \"\"\n    }\n  }\n\n  addNew = false\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== null && prevProps.data === null) {\n      if (this.props.data.id !== prevState.id) {\n        this.setState({ id: this.props.data.id })\n      }\n      if (this.props.data.name !== prevState.name) {\n        this.setState({ name: this.props.data.name })\n      }\n      if (this.props.data.category !== prevState.category) {\n        this.setState({ category: this.props.data.category })\n      }\n      if (this.props.data.popularity.popValue !== prevState.popularity) {\n        this.setState({\n          popularity: {\n            ...this.state.popularity,\n            popValue: this.props.data.popularity.popValue\n          }\n        })\n      }\n      if (this.props.data.order_status !== prevState.order_status) {\n        this.setState({ order_status: this.props.data.order_status })\n      }\n      if (this.props.data.price !== prevState.price) {\n        this.setState({ price: this.props.data.price })\n      }\n      if (this.props.data.img !== prevState.img) {\n        this.setState({ img: this.props.data.img })\n      }\n    }\n    if (this.props.data === null && prevProps.data !== null) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Audio\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    if (this.addNew) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        category: \"Audio\",\n        order_status: \"pending\",\n        price: \"\",\n        img: \"\",\n        popularity: {\n          popValue: \"\"\n        }\n      })\n    }\n    this.addNew = false\n  }\n\n  handleSubmit = obj => {\n    if (this.props.data !== null) {\n      this.props.updateData(obj)\n    } else {\n      this.addNew = true\n      this.props.addData(obj)\n    }\n    let params = Object.keys(this.props.dataParams).length\n      ? this.props.dataParams\n      : { page: 1, perPage: 4 }\n    this.props.handleSidebar(false, true)\n    this.props.getData(params)\n  }\n\n  render() {\n    let { show, handleSidebar, data } = this.props\n    let { name, category, order_status, price, popularity, img } = this.state\n    return (\n      <div\n        className={classnames(\"data-list-sidebar\", {\n          show: show\n        })}>\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\n          <h4>{data !== null ? \"UPDATE DATA\" : \"ADD NEW DATA\"}</h4>\n          <X size={20} onClick={() => handleSidebar(false, true)} />\n        </div>\n        <PerfectScrollbar\n          className=\"data-list-fields px-2 mt-3\"\n          options={{ wheelPropagation: false }}>\n          {this.props.thumbView && img.length ? (\n            <FormGroup className=\"text-center\">\n              <img className=\"img-fluid\" src={img} alt={name} />\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\n                <label\n                  className=\"btn btn-flat-primary\"\n                  htmlFor=\"update-image\"\n                  color=\"primary\">\n                  Upload Image\n                  <input\n                    type=\"file\"\n                    id=\"update-image\"\n                    hidden\n                    onChange={e =>\n                      this.setState({\n                        img: URL.createObjectURL(e.target.files[0])\n                      })\n                    }\n                  />\n                </label>\n                <Button\n                  color=\"flat-danger\"\n                  onClick={() => this.setState({ img: \"\" })}>\n                  Remove Image\n                </Button>\n              </div>\n            </FormGroup>\n          ) : null}\n          <FormGroup>\n            <Label for=\"data-name\">Name</Label>\n            <Input\n              type=\"text\"\n              value={name}\n              placeholder=\"Apple IphoneX\"\n              onChange={e => this.setState({ name: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-category\">Category</Label>\n            <Input\n              type=\"select\"\n              id=\"data-category\"\n              value={category}\n              onChange={e => this.setState({ category: e.target.value })}>\n              <option>Audio</option>\n              <option>Computers</option>\n              <option>Fitness</option>\n              <option>Appliances</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-popularity\">Popularity</Label>\n            <Input\n              type=\"number\"\n              value={popularity.popValue}\n              id=\"data-popularity\"\n              placeholder=\"0 - 100%\"\n              onChange={e =>\n                this.setState({\n                  popularity: { popularity, popValue: e.target.value }\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-status\">Order Status</Label>\n            <Input\n              type=\"select\"\n              id=\"data-status\"\n              value={order_status}\n              onChange={e => this.setState({ order_status: e.target.value })}>\n              <option>pending</option>\n              <option>canceled</option>\n              <option>delivered</option>\n              <option>on hold</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-price\">Price</Label>\n            <Input\n              type=\"number\"\n              value={price}\n              onChange={e => this.setState({ price: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"69.99\"\n            />\n          </FormGroup>\n          {this.props.thumbView && img.length <= 0 ? (\n            <label\n              className=\"btn btn-primary\"\n              htmlFor=\"upload-image\"\n              color=\"primary\">\n              Upload Image\n              <input\n                type=\"file\"\n                id=\"upload-image\"\n                hidden\n                onChange={e =>\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\n                }\n              />\n            </label>\n          ) : null}\n        </PerfectScrollbar>\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\n          <Button color=\"primary\" onClick={() => this.handleSubmit(this.state)}>\n            {data !== null ? \"Update\" : \"Submit\"}\n          </Button>\n          <Button\n            className=\"ml-1\"\n            color=\"danger\"\n            outline\n            onClick={() => handleSidebar(false, true)}>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\nexport default DataListSidebar\n","import React, { Component } from \"react\"\nimport {\n  Button,\n  Progress,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input\n} from \"reactstrap\"\nimport DataTable from \"react-data-table-component\"\nimport classnames from \"classnames\"\nimport ReactPaginate from \"react-paginate\"\nimport { history } from \"../../../history\"\nimport {\n  Edit,\n  Trash,\n  ChevronDown,\n  Plus,\n  Check,\n  ChevronLeft,\n  ChevronRight\n} from \"react-feather\"\nimport { connect } from \"react-redux\"\nimport {\n  getData,\n  getInitialData,\n  deleteData,\n  updateData,\n  addData,\n  filterData\n} from \"../../../redux/actions/data-list/\"\nimport Sidebar from \"./DataListSidebar\"\nimport Chip from \"../../../components/@vuexy/chips/ChipComponent\"\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\n\nimport \"../../../assets/scss/plugins/extensions/react-paginate.scss\"\nimport \"../../../assets/scss/pages/data-list.scss\"\n\nconst chipColors = {\n  \"on hold\": \"warning\",\n  delivered: \"success\",\n  pending: \"primary\",\n  canceled: \"danger\"\n}\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: \"rgba(115,103,240,.05)\",\n      color: \"#7367F0 !important\",\n      boxShadow: \"0 0 1px 0 #7367F0 !important\",\n      \"&:hover\": {\n        transform: \"translateY(0px) !important\"\n      }\n    }\n  }\n}\n\nconst ActionsComponent = props => {\n  return (\n    <div className=\"data-list-action\">\n      <Edit\n        className=\"cursor-pointer mr-1\"\n        size={20}\n        onClick={() => {\n          return props.currentData(props.row)\n        }}\n      />\n      <Trash\n        className=\"cursor-pointer\"\n        size={20}\n        onClick={() => {\n          props.deleteRow(props.row)\n        }}\n      />\n    </div>\n  )\n}\n\nconst CustomHeader = props => {\n  return (\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\n      <div className=\"actions-left d-flex flex-wrap\">\n        <UncontrolledDropdown className=\"data-list-dropdown mr-1\">\n          <DropdownToggle className=\"p-1\" color=\"primary\">\n            <span className=\"align-middle mr-1\">Actions</span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\n            <DropdownItem tag=\"a\">Print</DropdownItem>\n            <DropdownItem tag=\"a\">Export</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <Button\n          className=\"add-new-btn\"\n          color=\"primary\"\n          onClick={() => props.handleSidebar(true, true)}\n          outline>\n          <Plus size={15} />\n          <span className=\"align-middle\">Add New</span>\n        </Button>\n      </div>\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\n        <UncontrolledDropdown className=\"data-list-rows-dropdown mr-1 d-md-block d-none\">\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\n            <span className=\"align-middle mx-50\">\n              {`${props.index[0]} - ${props.index[1]} of ${props.total}`}\n            </span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\n              4\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\n              10\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\n              15\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\n              20\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n        <div className=\"filter-section\">\n          <Input type=\"text\" onChange={e => props.handleFilter(e)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nclass DataListConfig extends Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.dataList.data.length !== state.data.length ||\n      state.currentPage !== props.parsedFilter.page\n    ) {\n      return {\n        data: props.dataList.data,\n        allData: props.dataList.filteredData,\n        totalPages: props.dataList.totalPages,\n        currentPage: parseInt(props.parsedFilter.page) - 1,\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\n        totalRecords: props.dataList.totalRecords,\n        sortIndex: props.dataList.sortIndex\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  state = {\n    data: [],\n    totalPages: 0,\n    currentPage: 0,\n    columns: [\n      {\n        name: \"Name\",\n        selector: \"name\",\n        sortable: true,\n        minWidth: \"300px\",\n        cell: row => (\n          <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n            {row.name}\n          </p>\n        )\n      },\n      {\n        name: \"Category\",\n        selector: \"category\",\n        sortable: true\n      },\n      {\n        name: \"Popularity\",\n        selector: \"popularity\",\n        sortable: true,\n        cell: row => (\n          <Progress\n            className=\"w-100 mb-0\"\n            color={row.popularity.color}\n            value={row.popularity.popValue}\n          />\n        )\n      },\n      {\n        name: \"Order Status\",\n        selector: \"order_status\",\n        sortable: true,\n        cell: row => (\n          <Chip\n            className=\"m-0\"\n            color={chipColors[row.order_status]}\n            text={row.order_status}\n          />\n        )\n      },\n      {\n        name: \"Price\",\n        selector: \"price\",\n        sortable: true,\n        cell: row => `$${row.price}`\n      },\n      {\n        name: \"Actions\",\n        sortable: true,\n        cell: row => (\n          <ActionsComponent\n            row={row}\n            getData={this.props.getData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      }\n    ],\n    allData: [],\n    value: \"\",\n    rowsPerPage: 4,\n    sidebar: false,\n    currentData: null,\n    selected: [],\n    totalRecords: 0,\n    sortIndex: [],\n    addNew: \"\"\n  }\n\n  thumbView = this.props.thumbView\n\n  componentDidMount() {\n    this.props.getData(this.props.parsedFilter)\n    this.props.getInitialData()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.thumbView) {\n      this.thumbView = false\n      let columns = [\n        {\n          name: \"Image\",\n          selector: \"img\",\n          minWidth: \"220px\",\n          cell: row => <img src={row.img} height=\"100\" alt={row.name} />\n        },\n        {\n          name: \"Name\",\n          selector: \"name\",\n          sortable: true,\n          minWidth: \"250px\",\n          cell: row => (\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n              {row.name}\n            </p>\n          )\n        },\n        {\n          name: \"Category\",\n          selector: \"category\",\n          sortable: true\n        },\n        {\n          name: \"Popularity\",\n          selector: \"popularity\",\n          sortable: true,\n          cell: row => (\n            <Progress\n              className=\"w-100 mb-0\"\n              color={row.popularity.color}\n              value={row.popularity.popValue}\n            />\n          )\n        },\n        {\n          name: \"Order Status\",\n          selector: \"order_status\",\n          sortable: true,\n          cell: row => (\n            <Chip\n              className=\"m-0\"\n              color={chipColors[row.order_status]}\n              text={row.order_status}\n            />\n          )\n        },\n        {\n          name: \"Price\",\n          selector: \"price\",\n          sortable: true,\n          cell: row => `$${row.price}`\n        },\n        {\n          name: \"Actions\",\n          sortable: true,\n          cell: row => (\n            <ActionsComponent\n              row={row}\n              getData={this.props.getData}\n              parsedFilter={this.props.parsedFilter}\n              currentData={this.handleCurrentData}\n              deleteRow={this.handleDelete}\n            />\n          )\n        }\n      ]\n      this.setState({ columns })\n    }\n  }\n\n  handleFilter = e => {\n    this.setState({ value: e.target.value })\n    this.props.filterData(e.target.value)\n  }\n\n  handleRowsPerPage = value => {\n    let { parsedFilter, getData } = this.props\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\n    history.push(`/data-list/list-view?page=${page}&perPage=${value}`)\n    this.setState({ rowsPerPage: value })\n    getData({ page: parsedFilter.page, perPage: value })\n  }\n\n  handleSidebar = (boolean, addNew = false) => {\n    this.setState({ sidebar: boolean })\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\n  }\n\n  handleDelete = row => {\n    this.props.deleteData(row)\n    this.props.getData(this.props.parsedFilter)\n    if (this.state.data.length - 1 === 0) {\n      let urlPrefix = this.props.thumbView\n        ? \"/data-list/thumb-view/\"\n        : \"/data-list/list-view/\"\n      history.push(\n        `${urlPrefix}list-view?page=${parseInt(\n          this.props.parsedFilter.page - 1\n        )}&perPage=${this.props.parsedFilter.perPage}`\n      )\n      this.props.getData({\n        page: this.props.parsedFilter.page - 1,\n        perPage: this.props.parsedFilter.perPage\n      })\n    }\n  }\n\n  handleCurrentData = obj => {\n    this.setState({ currentData: obj })\n    this.handleSidebar(true)\n  }\n\n  handlePagination = page => {\n    let { parsedFilter, getData } = this.props\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\n    let urlPrefix = this.props.thumbView\n      ? \"/data-list/thumb-view/\"\n      : \"/data-list/list-view/\"\n    history.push(\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\n    )\n    getData({ page: page.selected + 1, perPage: perPage })\n    this.setState({ currentPage: page.selected })\n  }\n\n  render() {\n    let {\n      columns,\n      data,\n      allData,\n      totalPages,\n      value,\n      rowsPerPage,\n      currentData,\n      sidebar,\n      totalRecords,\n      sortIndex\n    } = this.state\n    return (\n      <div\n        className={`data-list ${\n          this.props.thumbView ? \"thumb-view\" : \"list-view\"\n        }`}>\n        <DataTable\n          columns={columns}\n          data={value.length ? allData : data}\n          pagination\n          paginationServer\n          paginationComponent={() => (\n            <ReactPaginate\n              previousLabel={<ChevronLeft size={15} />}\n              nextLabel={<ChevronRight size={15} />}\n              breakLabel=\"...\"\n              breakClassName=\"break-me\"\n              pageCount={totalPages}\n              containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\n              activeClassName=\"active\"\n              forcePage={\n                this.props.parsedFilter.page\n                  ? parseInt(this.props.parsedFilter.page - 1)\n                  : 0\n              }\n              onPageChange={page => this.handlePagination(page)}\n            />\n          )}\n          noHeader\n          subHeader\n          selectableRows\n          responsive\n          pointerOnHover\n          selectableRowsHighlight\n          onSelectedRowsChange={data =>\n            this.setState({ selected: data.selectedRows })\n          }\n          customStyles={selectedStyle}\n          subHeaderComponent={\n            <CustomHeader\n              handleSidebar={this.handleSidebar}\n              handleFilter={this.handleFilter}\n              handleRowsPerPage={this.handleRowsPerPage}\n              rowsPerPage={rowsPerPage}\n              total={totalRecords}\n              index={sortIndex}\n            />\n          }\n          sortIcon={<ChevronDown />}\n          selectableRowsComponent={Checkbox}\n          selectableRowsComponentProps={{\n            color: \"primary\",\n            icon: <Check className=\"vx-icon\" size={12} />,\n            label: \"\",\n            size: \"sm\"\n          }}\n        />\n        <Sidebar\n          show={sidebar}\n          data={currentData}\n          updateData={this.props.updateData}\n          addData={this.props.addData}\n          handleSidebar={this.handleSidebar}\n          thumbView={this.props.thumbView}\n          getData={this.props.getData}\n          dataParams={this.props.parsedFilter}\n          addNew={this.state.addNew}\n        />\n        <div\n          className={classnames(\"data-list-overlay\", {\n            show: sidebar\n          })}\n          onClick={() => this.handleSidebar(false, true)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getData,\n  deleteData,\n  updateData,\n  addData,\n  getInitialData,\n  filterData\n})(DataListConfig)\n","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nclass Chip extends React.Component {\r\n  closeChip = e => {\r\n    e.target.closest(\".chip\").remove()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`chip ${this.props.className} ${\r\n          this.props.color ? `chip-${this.props.color}` : null\r\n        }`}\r\n      >\r\n        <div className=\"chip-body\">\r\n          {(!this.props.avatarImg && this.props.avatarText) ||\r\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\r\n            <div\r\n              className={`avatar ${\r\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\r\n              }`}\r\n            >\r\n              <div className=\"avatar-content\">\r\n                {this.props.avatarText ? this.props.avatarText : null}\r\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\r\n              </div>\r\n            </div>\r\n          ) : this.props.avatarImg ? (\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={this.props.avatarImg}\r\n                alt=\"chipImg\"\r\n                height=\"20\"\r\n                width=\"20\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"chip-text\">{this.props.text}</div>\r\n          {this.props.closable ? (\r\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\r\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chip\r\n"],"sourceRoot":""}