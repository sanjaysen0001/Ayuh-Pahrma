{"version":3,"sources":["Pharmapages/Addsubcategory.js"],"names":["Addsubcategory","props","handleChange","event","target","name","value","setState","state","selectedCategory","subCategoryName","categories","bind","handleSubmit","axiosConfig","get","then","response","data","Category","console","log","catch","error","preventDefault","this","post","category","Swal","fire","icon","title","text","confirmButtonColor","confirmButtonText","alert","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","sm","htmlFor","style","height","border","borderRadius","aria-label","id","onChange","disabled","map","key","categoryName","required","type","Ripple","color","Component"],"mappings":"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","file":"static/js/231.e2428b36.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport axiosConfig from \"../axiosConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../assets/scss/plugins/extensions/editor.scss\";\r\n\r\nimport { data } from \"jquery\";\r\nimport Swal from \"sweetalert2\";\r\nexport class Addsubcategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedCategory: \"\",\r\n      subCategoryName: \"\",\r\n      categories: [], // Assuming you have a way to load these categories\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axiosConfig\r\n      .get(\"/pharma-category/view-category\")\r\n      .then((response) => {\r\n        this.setState({ categories: response.data.Category });\r\n        console.log(response.data.Category);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error fetching the categories!\", error);\r\n      });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { selectedCategory, subCategoryName } = this.state;\r\n\r\n    // Validate form data\r\n    if (!selectedCategory || !subCategoryName) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    // Post data to API\r\n    axiosConfig\r\n      .post(\"/pharma-category/save-sub-category\", {\r\n        category: selectedCategory,\r\n        subCategoryName: subCategoryName,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({ selectedCategory: \"\", subCategoryName: \"\" });\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success!\",\r\n          text: \"Sub-Category Add successfully.\",\r\n          confirmButtonColor: \"#3085d6\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Something went wrong! Please try again later.\",\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { selectedCategory, subCategoryName, categories } = this.state;\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Sub-Category\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/Subcategory\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                {/*\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Product Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n */}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <label htmlFor=\"categorySelect\">Select Category</label>\r\n                  <br />\r\n                  <select\r\n                    className=\"form-select w-100\"\r\n                    style={{\r\n                      height: \"37px\",\r\n                      border: \"1px solid #d9d9d9\",\r\n                      borderRadius: \"5px\",\r\n                    }}\r\n                    aria-label=\"Default select example\"\r\n                    id=\"categorySelect\"\r\n                    name=\"selectedCategory\"\r\n                    value={selectedCategory}\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      --Select--\r\n                    </option>\r\n                    {categories.map((category) => (\r\n                      <option key={category.id} value={category.id}>\r\n                        {category.categoryName}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label htmlFor=\"subCategoryName\">Sub-Category Name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"subCategoryName\"\r\n                    id=\"subCategoryName\"\r\n                    value={subCategoryName}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Col>\r\n\r\n                {/*\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Product Category</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product Category</option>\r\n                    {this.state.categoryP?.map((allCategory) => (\r\n                      <option value={allCategory?._id} key={allCategory?._id}>\r\n                        {allCategory?.name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Price(MRP)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    placeholder=\"Enter price\"\r\n                    value={this.state.price}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Set No of Question </Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"qsCount\"\r\n                    placeholder=\"Enter No of Question \"\r\n                    value={this.state.qsCount}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n */}\r\n                {/* <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label> * Limit(50)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"limit\"\r\n                    onKeyDown={this.blockInvalidChar}\r\n                    min=\"0\"\r\n                    max=\"50\"\r\n                    placeholder=\"Enter limit max is 50\"\r\n                    value={this.state.limit}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/*\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Thumnail Image</Label>\r\n\r\n                  <Label>Image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n\r\n                  <br />\r\n\r\n                  <Editor\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      inline: { inDropdown: true },\r\n                      list: { inDropdown: true },\r\n                      textAlign: { inDropdown: true },\r\n                      link: { inDropdown: true },\r\n                      history: { inDropdown: true },\r\n                      image: {\r\n                        uploadCallback: this.uploadImageCallBack,\r\n                        previewImage: true,\r\n                        alt: { present: true, mandatory: true },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n                 */}\r\n              </Row>\r\n              {/*\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col>\r\n               */}\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Addsubcategory;\r\n"],"sourceRoot":""}