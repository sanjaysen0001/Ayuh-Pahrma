{"version":3,"sources":["views/apps/productmanager/product/AddProduct.js"],"names":["AddProduct","props","handleChange","event","target","name","setState","file","files","value","handleSubmit","preventDefault","formData","FormData","append","state","categoryName","axiosConfig","post","then","response","console","log","data","Swal","fire","icon","title","text","confirmButtonColor","confirmButtonText","result","isConfirmed","window","location","reload","catch","error","className","col-sm-6","render","history","onClick","push","onSubmit","this","lg","md","sm","required","type","onChange","Ripple","color","Component"],"mappings":"gbAwBaA,EAAU,kDACrB,WAAYC,GAAQ,IAAD,EAKf,OALe,qBACjB,cAAMA,IAORC,aAAe,SAACC,GACY,SAAtBA,EAAMC,OAAOC,KACf,EAAKC,SAAS,CACZC,KAAMJ,EAAMC,OAAOI,MAAM,KAG3B,EAAKF,SAAS,eACXH,EAAMC,OAAOC,KAAOF,EAAMC,OAAOK,SAGtC,EAEFC,aAAe,SAACP,GACdA,EAAMQ,iBACN,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,eAAgB,EAAKC,MAAMC,cAC3CJ,EAASE,OAAO,OAAQ,EAAKC,MAAMR,MAEnCU,IACGC,KAAK,iCAAkCN,GACvCO,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrBC,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,WACPC,KAAM,6BACNC,mBAAoB,UACpBC,kBAAmB,OAClBX,MAAK,SAACY,GACHA,EAAOC,aACTC,OAAOC,SAASC,eAKrBC,OAAM,SAACC,GACNb,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,UACPC,KAAM,sDA7CZ,EAAKb,MAAQ,CACXC,aAAc,GACdT,KAAM,MACN,EA0OH,OAzOA,mCA8CD,WACE,OACE,6BACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAAC+B,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIC,YAAA,EAASD,UAAU,cAAY,iBAIrC,kBAAC,IAAG,KACF,kBAAC,QAAK,CACJE,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLH,UAAU,8BACVI,QAAS,kBAAMD,EAAQE,KAAK,eAAa,aAQnD,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACL,UAAU,MAAMM,SAAUC,KAAKnC,cACnC,kBAAC,IAAG,KAcF,kBAAC,IAAG,CAACoC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIV,UAAU,QAClC,kBAAC,IAAK,sBACN,kBAAC,IAAK,CACJW,UAAQ,EACRC,KAAK,OACL7C,KAAK,eACLI,MAAOoC,KAAK9B,MAAMC,aAClBmC,SAAUN,KAAK3C,gBAGnB,kBAAC,IAAG,CAAC4C,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIV,UAAU,UA0HtC,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACQ,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIV,UAAU,QAClC,kBAAC,IAAOc,OAAM,CACZC,MAAM,UACNH,KAAK,SACLZ,UAAU,aAAW,iBAWtC,EAhPoB,CAASgB,aAkPjBtD,a","file":"static/js/287.6fe32e03.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\n\r\nimport { data } from \"jquery\";\r\nimport Swal from \"sweetalert2\";\r\nexport class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categoryName: \"\",\r\n      file: null,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    if (event.target.name === \"file\") {\r\n      this.setState({\r\n        file: event.target.files[0],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"categoryName\", this.state.categoryName);\r\n    formData.append(\"file\", this.state.file);\r\n\r\n    axiosConfig\r\n      .post(\"/pharma-category/save-category\", formData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success!\",\r\n          text: \"Category Add successfully.\",\r\n          confirmButtonColor: \"#3085d6\",\r\n          confirmButtonText: \"OK\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            window.location.reload();\r\n          }\r\n        });\r\n      })\r\n\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"Something went wrong! Please try again later.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Category\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/Category\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                {/*\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Product Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n */}\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Category Name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"categoryName\"\r\n                    value={this.state.categoryName}\r\n                    onChange={this.handleChange}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  {/* <Label>Image</Label>\r\n                <Input\r\n              \r\n                  type=\"file\" name=\"file\" onChange={this.handleChange}\r\n                ></Input> */}\r\n                </Col>\r\n                {/*\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Product Category</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product Category</option>\r\n                    {this.state.categoryP?.map((allCategory) => (\r\n                      <option value={allCategory?._id} key={allCategory?._id}>\r\n                        {allCategory?.name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Price(MRP)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    placeholder=\"Enter price\"\r\n                    value={this.state.price}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Set No of Question </Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"qsCount\"\r\n                    placeholder=\"Enter No of Question \"\r\n                    value={this.state.qsCount}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n */}\r\n                {/* <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label> * Limit(50)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"limit\"\r\n                    onKeyDown={this.blockInvalidChar}\r\n                    min=\"0\"\r\n                    max=\"50\"\r\n                    placeholder=\"Enter limit max is 50\"\r\n                    value={this.state.limit}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/*\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Thumnail Image</Label>\r\n\r\n                  <Label>Image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n\r\n                  <br />\r\n\r\n                  <Editor\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      inline: { inDropdown: true },\r\n                      list: { inDropdown: true },\r\n                      textAlign: { inDropdown: true },\r\n                      link: { inDropdown: true },\r\n                      history: { inDropdown: true },\r\n                      image: {\r\n                        uploadCallback: this.uploadImageCallBack,\r\n                        previewImage: true,\r\n                        alt: { present: true, mandatory: true },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n                 */}\r\n              </Row>\r\n              {/*\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col>\r\n               */}\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddProduct;\r\n"],"sourceRoot":""}