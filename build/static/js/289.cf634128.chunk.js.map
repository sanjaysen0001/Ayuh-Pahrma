{"version":3,"sources":["views/apps/productmanager/product/Editsubcategory.js"],"names":["Editsubcategory","props","fetchData","id","axiosConfig","get","then","response","setState","data","SubCategory","console","log","catch","error","message","state","category","subCategoryName","match","params","handleChange","bind","handleSubmit","this","event","target","name","value","preventDefault","put","Swal","fire","icon","title","text","confirmButtonColor","confirmButtonText","className","col-sm-6","render","history","onClick","push","onSubmit","lg","md","sm","required","type","disabled","onChange","Ripple","color","Component"],"mappings":"8bAwBaA,EAAe,kDAC1B,WAAYC,GAAQ,IAAD,EAUgC,OAVhC,qBACjB,cAAMA,IAeRC,UAAY,SAACC,GACXC,IACGC,IAAI,4CAAD,OAA6CF,IAChDG,MAAK,SAACC,GAAc,IAAD,EAClB,EAAKC,SAASD,EAASE,KAAKC,aAC5BC,QAAQC,IAAiB,QAAd,EAACL,EAASE,YAAI,aAAb,EAAeC,gBAE5BG,OAAM,SAACC,GACN,EAAKN,SAAS,CAAEM,MAAOA,EAAMC,cAtBjC,EAAKC,MAAQ,CACXC,SAAU,GACVC,gBAAiB,GACjBf,GAAI,EAAKF,MAAMkB,MAAMC,OAAOjB,IAI9B,EAAKkB,aAAe,EAAKA,aAAaC,KAAK,gBAC3C,EAAKC,aAAe,EAAKA,aAAaD,KAAK,gBAAM,EAiPlD,OAhPA,8CACD,WACE,IAAQnB,EAAOqB,KAAKvB,MAAMkB,MAAMC,OAAxBjB,GACRqB,KAAKtB,UAAUC,KAChB,0BAYD,SAAasB,GACXD,KAAKhB,SAAS,eAAGiB,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UACnD,0BAED,SAAaH,GACXA,EAAMI,iBACN,MAA0CL,KAAKR,MAAvCC,EAAQ,EAARA,SAAUC,EAAe,EAAfA,gBAAiBf,EAAE,EAAFA,GAGnCC,IACG0B,IAAI,wCAAD,OAAyC3B,GAAM,CACjDc,WACAC,oBAEDZ,MAAK,SAACC,GACLI,QAAQC,IAAIL,EAASE,MACrBsB,IAAKC,KAAK,CACRC,KAAM,UACNC,MAAO,WACPC,KAAM,kCACNC,mBAAoB,UACpBC,kBAAmB,UAKtBxB,OAAM,SAACC,GACNH,QAAQG,MAAM,4CAA6CA,QAGhE,oBACD,WACE,OACE,6BACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACwB,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIC,YAAA,EAASD,UAAU,cAAY,sBAIrC,kBAAC,IAAG,KACF,kBAAC,QAAK,CACJE,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAM,CACLH,UAAU,8BACVI,QAAS,kBAAMD,EAAQE,KAAK,kBAAgB,aAQtD,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACL,UAAU,MAAMM,SAAUpB,KAAKD,cACnC,kBAAC,IAAG,KAeF,kBAAC,IAAG,CAACsB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIT,UAAU,QAClC,kBAAC,IAAK,sBACN,kBAAC,IAAK,CACJU,UAAQ,EACRC,KAAK,OACLtB,KAAK,WACLuB,UAAQ,EACRtB,MAAOJ,KAAKR,MAAMC,SAClBkC,SAAU3B,KAAKH,gBAGnB,kBAAC,IAAG,CAACwB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIT,UAAU,QAClC,kBAAC,IAAK,0BACN,kBAAC,IAAK,CACJU,UAAQ,EACRC,KAAK,OACLtB,KAAK,kBACLC,MAAOJ,KAAKR,MAAME,gBAClBiC,SAAU3B,KAAKH,iBAuHrB,kBAAC,IAAG,KACF,kBAAC,IAAG,CAACwB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIT,UAAU,QAClC,kBAAC,IAAOc,OAAM,CACZC,MAAM,UACNJ,KAAK,SACLX,UAAU,aAAW,oBAWtC,EA5PyB,CAASgB,aA8PtBtD,a","file":"static/js/289.cf634128.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\n\r\nimport { data } from \"jquery\";\r\nimport Swal from \"sweetalert2\";\r\nexport class Editsubcategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      category: \"\",\r\n      subCategoryName: \"\",\r\n      id: this.props.match.params.id, // Assuming you're using react-router for routing\r\n    };\r\n\r\n    // Binding the handleChange and handleSubmit methods\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params; // Assuming you're using react-router for routing\r\n    this.fetchData(id);\r\n  }\r\n  fetchData = (id) => {\r\n    axiosConfig\r\n      .get(`/pharma-category/view-sub-category-by-id/${id}`)\r\n      .then((response) => {\r\n        this.setState(response.data.SubCategory);\r\n        console.log(response.data?.SubCategory);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: error.message });\r\n      });\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { category, subCategoryName, id } = this.state;\r\n\r\n    // Making the PUT request\r\n    axiosConfig\r\n      .put(`/pharma-category/update-sub-category/${id}`, {\r\n        category,\r\n        subCategoryName,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success!\",\r\n          text: \"Sub-Category Edit successfully.\",\r\n          confirmButtonColor: \"#3085d6\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n\r\n        // You can handle success, e.g., show a success message or redirect\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error updating the category!\", error);\r\n        // You can handle error, e.g., show an error message\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Sub-Category\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/Subcategory\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                {/*\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Product Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n */}\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Category Name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    disabled\r\n                    value={this.state.category}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Sub-Category Name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"subCategoryName\"\r\n                    value={this.state.subCategoryName}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Col>\r\n\r\n                {/*\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Product Category</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product Category</option>\r\n                    {this.state.categoryP?.map((allCategory) => (\r\n                      <option value={allCategory?._id} key={allCategory?._id}>\r\n                        {allCategory?.name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Price(MRP)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    placeholder=\"Enter price\"\r\n                    value={this.state.price}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Set No of Question </Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"qsCount\"\r\n                    placeholder=\"Enter No of Question \"\r\n                    value={this.state.qsCount}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n */}\r\n                {/* <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label> * Limit(50)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"limit\"\r\n                    onKeyDown={this.blockInvalidChar}\r\n                    min=\"0\"\r\n                    max=\"50\"\r\n                    placeholder=\"Enter limit max is 50\"\r\n                    value={this.state.limit}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                {/*\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Thumnail Image</Label>\r\n\r\n                  <Label>Image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n\r\n                  <br />\r\n\r\n                  <Editor\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      inline: { inDropdown: true },\r\n                      list: { inDropdown: true },\r\n                      textAlign: { inDropdown: true },\r\n                      link: { inDropdown: true },\r\n                      history: { inDropdown: true },\r\n                      image: {\r\n                        uploadCallback: this.uploadImageCallBack,\r\n                        previewImage: true,\r\n                        alt: { present: true, mandatory: true },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n                 */}\r\n              </Row>\r\n              {/*\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col>\r\n               */}\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Update\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Editsubcategory;\r\n"],"sourceRoot":""}